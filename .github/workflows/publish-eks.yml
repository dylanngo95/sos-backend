name: publish-eks

on:
  workflow_dispatch:
    inputs:
      deploy_version:
        description: 'The version to be deployed (tag name, ex: v1.0)'
        required: true 
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set release version and inject secrets
        env:
          CALLER: ${{ secrets.BACKEND_OTP_CALLER }}
          REMINDER_CAMPAIGN_ID: ${{ secrets.BACKEND_OTP_REMINDER_CAMPAIGN_ID }}
          REMINDER_HOST: ${{ secrets.BACKEND_OTP_REMINDER_HOST }}
          REMINDER_SECRET_KEY: ${{ secrets.BACKEND_OTP_SECRET_KEY }}
          AWS_REGION: ${{ secrets.BACKEND_AWS_REGION }}
          S3_BUCKET: ${{ secrets.BACKEND_S3_BUCKET }}
          S3_ACCESS_KEY_ID: ${{ secrets.BACKEND_S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.BACKEND_S3_SECRET_ACCESS_KEY }}
        run: |
          sed -i -e 's/<<version>>/${{ github.event.inputs.deploy_version }}/g' \
                 -e 's/<<caller>>/${{ env.CALLER }}/g' \
                 -e 's/<<reminder_campaign_id>>/${{ env.REMINDER_CAMPAIGN_ID }}/g' \
                 -e 's/<<reminder_host>>/${{ env.REMINDER_HOST }}/g' \
                 -e 's/<<reminder_secret_key>>/${{ env.REMINDER_SECRET_KEY }}/g' \
                 -e 's/<<aws_region>>/${{ env.AWS_REGION }}/g' \
                 -e 's/<<s3_bucket>>/${{ env.S3_BUCKET }}/g' \
                 -e 's/<<s3_access_key_id>>/${{ env.S3_ACCESS_KEY_ID }}/g' \
                 -e 's/<<s3_secret_access_key>>/${{ env.S3_SECRET_ACCESS_KEY }}/g' \
                 ./eks/backend/deploy-prod.yaml
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     
      - 
       name: deploy to cluster
       uses: kodermax/kubectl-aws-eks@master
       env:
         KUBE_CONFIG_DATA: ${{ secrets.AWS_KUBE_CONFIG }}
       with:
         args: apply -f ./eks/backend/deploy-prod.yaml
        
      - name: verify deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_KUBE_CONFIG }}
        with:
          args: rollout status statefulset/sos-backend-prod
